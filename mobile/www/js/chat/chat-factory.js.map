{"version":3,"names":[],"mappings":"","sources":["chat/chat-factory.js"],"sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name chat.factory:Chat\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('chat')\r\n    .factory('ChatService', ChatService);\r\n\r\n  function ChatService($rootScope, $q) {\r\n\r\n    var ChatBase = {};\r\n\r\n    ChatBase.openChat = function (cb){\r\n      $rootScope.chatificator.emit('openChat', $rootScope.auth_user.cod,\r\n        function (chats) {\r\n          cb(chats)\r\n        });\r\n    }\r\n\r\n    ChatBase.openChats = function (chat, cb){\r\n      var options = {\r\n        // chat: chat.chat,\r\n        iChat: chat.chat,\n        uss: chat.user2,\n        me: $rootScope.auth_user.cod\n        // user: $rootScope.auth_user.cod\r\n       }\r\n\r\n      $rootScope.chatificator.emit('chatCreate',options,function(data){\n\n        console.log(data)\n\n        $rootScope.messages[data.id] = data.data.msg\n\n        cb(data)\r\n      })\r\n\r\n    }\r\n\r\n    ChatBase.loadMessages = function (options, cb){\r\n\r\n      var options = {\r\n        user: '68458' + options.cod,\r\n        userNick: options.nick,\r\n        userRep: '3546841' + options.id_user\r\n      }\r\n\r\n      $rootScope.chatificator.emit('historychat', options,\r\n        function (messages) {\n          console.log(messages)\r\n          cb(messages)\r\n        },\r\n      0)\r\n\r\n    }\r\n\r\n    ChatBase.typing = function(options){\r\n      $rootScope.chatificator.emit('typing', {\r\n        me: options.me,\r\n        you: '548783541234'+ options.you\r\n      });\r\n    }\r\n\r\n    ChatBase.createChat = function (options, cb){\r\n\r\n      console.log(options)\r\n\r\n      this.open.verify(options.us, options.cod.substr(4)).then(function(){\r\n\r\n        $rootScope.chatificator.emit('chatCreate', {\r\n          chat: 'user_'+options.us,\r\n          user: options.cod\r\n        }, function(c){\r\n           cb(c)\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n\r\n    ChatBase.open = {\r\n\r\n        set: function (newVal){\r\n\r\n          if (localStorage['chats']){\r\n\r\n            localStorage['chats'] = JSON.stringify(JSON.parse(localStorage['chats']).push(newVal))\r\n\r\n            return true\r\n\r\n          }else\r\n            return false\r\n        },\r\n\r\n        get: function(){\r\n\r\n          return localStorage['chats'] ? JSON.parse(localStorage['chats']) : []\r\n\r\n        },\r\n\r\n        verify: function (a, b){\r\n\r\n          var defer = $q.defer(), self = this, a = parseInt(a), b = parseInt(b)\r\n\r\n          if (self.get().length < 1 || self.get() == undefined)\r\n            defer.resolve()\r\n          else\r\n            for (var i = 0; i < self.get().length; i++){\r\n\r\n              var substr4 = parseInt(self.get()[i].substr(4))\r\n\r\n              var substr5 = parseInt(self.get()[i].substr(5))\r\n\r\n              var val1 = substr4 === a && substr5 === b;\r\n\r\n              var val2 = substr4 === b && substr5 === a;\r\n\r\n              if (val1 || val2){\r\n                defer.reject()\r\n                break;\r\n              }\r\n              else if(self.get().length -1 === i )\r\n                defer.resolve()\r\n\r\n            }\r\n\r\n          // if (('.user_'+localStorage.user.substr(4)+'_'+a.chat.substr(5))&&!('.user_'+a.chat.substr(5)+'_'+localStorage.user.substr(4))) {};\r\n\r\n          return defer.promise\r\n\r\n        }\r\n    }\r\n\r\n    return ChatBase;\r\n  }\r\n}());\r\n"],"file":"chat/chat-factory.js","sourceRoot":"/source/"}
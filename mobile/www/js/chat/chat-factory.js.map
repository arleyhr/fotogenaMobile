{"version":3,"names":[],"mappings":"","sources":["chat/chat-factory.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  /**\n   * @ngdoc service\n   * @name chat.factory:Chat\n   *\n   * @description\n   *\n   */\n  angular\n    .module('chat')\n    .factory('ChatService', ChatService);\n\n  function ChatService($rootScope, $q) {\n\n    var ChatBase = {};\n\n    ChatBase.openChat = function (cb){\n      $rootScope.chatificator.emit('openChat', $rootScope.auth_user.cod, \n        function (chats) {\n          cb(chats)\n        });\n    }\n\n    ChatBase.openChats = function (chat, cb){\n\n      var options = {\n        chat: chat.chat,\n         user: $rootScope.auth_user.cod\n       }\n\n      $rootScope.chatificator.emit('chatCreate',options,function(data){\n        cb(data)\n      })\n\n    }\n\n    ChatBase.loadMessages = function (options, cb){\n\n      var options = {\n        user: '68458' + options.cod,\n        userNick: options.nick,\n        userRep: '3546841' + options.id_user\n      }\n\n      $rootScope.chatificator.emit('historychat', options, \n        function (messages) {\n          cb(messages)\n        }, \n      0)\n\n    }\n\n    ChatBase.typing = function(options){\n      $rootScope.chatificator.emit('typing', {\n        me: options.me,\n        you: '548783541234'+ options.you\n      });\n    }\n\n    ChatBase.createChat = function (options, cb){\n\n      console.log(options)\n      \n      this.open.verify(options.us, options.cod.substr(4)).then(function(){\n\n        $rootScope.chatificator.emit('chatCreate', {\n          chat: 'user_'+options.us,\n          user: options.cod\n        }, function(c){\n           cb(c)\n        })\n\n      })\n      \n    }\n\n    ChatBase.open = {\n\n        set: function (newVal){\n\n          if (localStorage['chats']){\n\n            localStorage['chats'] = JSON.stringify(JSON.parse(localStorage['chats']).push(newVal))\n\n            return true\n\n          }else\n            return false\n        },\n\n        get: function(){\n\n          return localStorage['chats'] ? JSON.parse(localStorage['chats']) : []\n\n        },\n\n        verify: function (a, b){\n\n          var defer = $q.defer(), self = this, a = parseInt(a), b = parseInt(b)\n\n          if (self.get().length < 1 || self.get() == undefined)\n            defer.resolve()\n          else\n            for (var i = 0; i < self.get().length; i++){\n\n              var substr4 = parseInt(self.get()[i].substr(4))\n\n              var substr5 = parseInt(self.get()[i].substr(5))\n\n              var val1 = substr4 === a && substr5 === b;\n\n              var val2 = substr4 === b && substr5 === a;\n\n              if (val1 || val2){\n                defer.reject()\n                break;\n              }\n              else if(self.get().length -1 === i )\n                defer.resolve()\n\n            }\n\n          // if (('.user_'+localStorage.user.substr(4)+'_'+a.chat.substr(5))&&!('.user_'+a.chat.substr(5)+'_'+localStorage.user.substr(4))) {};\n\n          return defer.promise\n\n        }\n    }\n\n    return ChatBase;\n  }\n}());\n"],"file":"chat/chat-factory.js","sourceRoot":"/source/"}